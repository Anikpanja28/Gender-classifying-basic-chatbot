import win32com.client as wincl
import nltk
from nltk.chat.util import Chat, reflections
from sklearn import tree
speak = wincl.Dispatch("SAPI.SpVoice")
import time

print(Chat)

reflections

set_pairs = [
    [
        r"my name is (.*)",
        ["Hello %1, How are you doing today ?",]
    ],
    [
        r"hi|hey|hello",
        ["Hello", "Hey there",]
    ], 
    [
        r"what is your name?",
        ["You can call me a chatbot ?",]
    ],
    [
        r"how are you",
        ["I am fine, thank you! How can i help you?",]
    ],
    [
        r"i am fine thank you",
        ["great to hear that, how can i help you?",]
    ],
    [
        r"how can i help you",
        ["i am looking for online guides and courses to learn data science, can you suggest?", "i am looking for data science training platforms",]
    ],
    [
        r"i'm (.*) doing good",
        ["That's great to hear","How can i help you?:)",]
    ],
    [
        r"i am looking for online guides and courses to learn data science can you suggest",
        ["Pluralsight is a great option to learn data science. You can check their website",]
    ],
    [
        r"thanks for the suggestion do they have great authors and instructors",
        ["Yes, they have the world class best authors, that is their strength;)",]
    ],
    [
        r"(.*) thank you so much that was helpful",
        ["I am happy to help", "No problem, you're welcome",]
    ],
    [
        r"quit",
    ["Bye, take care. See you soon :) ","It was nice talking to you. See you soon :)"]
],
]



def chatbot():
        text="Hey! how are you doing"
        print(text)
        speak.Speak(text)
        text = "I am an interactive gender classifier, provide me with three basic body dimensions, Height, weight, and shoe size and witness the magic."
        print(text)
        speak.Speak(text)

chatbot()
x=[[181,80,44], [177,70,43], [160,60,38], [154,54,37], [166,65,40], [190,90,47], [175,64,39], [177,70,40], [159,55,37], [171,75,42], [181,85,43]]
y=['male', 'female', 'female', 'female', 'male', 'male', 'male', 'female', 'male', 'female', 'male']
clf = tree.DecisionTreeClassifier()
clf = clf.fit(x,y)
print("Enter the person's height:")
speak.Speak("Please enter the person's height.")
Height = input()
print("Enter the person's weight:")
speak.Speak("Please enter the person's Weight, dont be shy, i am just a machine, i dont tend to judge like you humans")
Weight = input()
speak.Speak("Please enter the person's shoe size.")
print("Enter the person's shoe size:")
Waist = input()
print("From here on Half of my processing power will be compromised because i will have to calculate the gender, but nevermind you can always chat with me")
speak.Speak("Half of my processing power will be compromised because i will have to calculate the gender, but nevermind you can always chat with me")

prediction=clf.predict([[Height,Weight,Waist]])

chat = Chat(set_pairs, reflections)
#print(chat)
#speak.Speak(chat)


talk = chat.converse()
speak.Speak(talk)
print("Gender test proves that the person is a ",prediction)
if prediction == 'male':
        speak.Speak("My calculations prove that the person is a Male")
else:
        speak.Speak("My calculations prove that the person is a Female")
time.sleep(5)

if _name_ == "_main_":
    chatbot()
   
    
            



